<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myall.myBlog.mapper.ArticleMapper">
    <sql id="tb">article</sql>
    <insert id="insert" useGeneratedKeys="true" keyProperty="articleId">
        insert into <include refid="tb"/>
        (article_user_id, article_title,
        article_view_count, article_comment_count,
        article_like_count, article_create_time, article_update_time,
        article_is_comment, article_status, article_order,
        article_content, article_summary,article_thumbnail)
        values (#{articleUserId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR},
        #{articleViewCount,jdbcType=INTEGER},
        #{articleCommentCount,jdbcType=INTEGER},
        #{articleLikeCount,jdbcType=INTEGER}, #{articleCreateTime,jdbcType=TIMESTAMP},
        #{articleUpdateTime,jdbcType=TIMESTAMP},
        #{articleIsComment,jdbcType=INTEGER}, #{articleStatus,jdbcType=INTEGER}, #{articleOrder,jdbcType=INTEGER},
        #{articleContent,jdbcType=LONGVARCHAR}, #{articleSummary,jdbcType=VARCHAR}, #{articleThumbnail})
    </insert>
    <delete id="deleteByArticleId">
        delete from <include refid="tb"/>
        where article_id = #{articleId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByArticleUserId">
        delete from <include refid="tb"/>
        where article_user_id = #{articleUserId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteBatch">
        delete from <include refid="tb"/>
        where artile_id in
            <foreach collection="ids" open="(" close=")" item="id">
                #{id}
            </foreach>

    </delete>
    <update id="update">
        update <include refid="tb"/>
        <set>
            <if test="articleUserId != null">article_user_id = #{articleUserId,jdbcType=INTEGER},</if>
            <if test="articleTitle != null">article_title = #{articleTitle,jdbcType=VARCHAR},</if>
            <if test="articleViewCount != null">article_view_count = #{articleViewCount,jdbcType=INTEGER},</if>
            <if test="articleCommentCount != null">article_comment_count = #{articleCommentCount,jdbcType=INTEGER},</if>
            <if test="articleLikeCount != null">article_like_count = #{articleLikeCount,jdbcType=INTEGER},</if>
            <if test="articleCreateTime != null">article_create_time = #{articleCreateTime,jdbcType=TIMESTAMP},</if>
            <if test="articleUpdateTime != null">article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},</if>
            <if test="articleIsComment != null">article_is_comment = #{articleIsComment,jdbcType=INTEGER},</if>
            <if test="articleStatus != null">article_status = #{articleStatus,jdbcType=INTEGER},</if>
            <if test="articleOrder != null">article_order = #{articleOrder,jdbcType=INTEGER},</if>
            <if test="articleContent != null">article_content = #{articleContent,jdbcType=LONGVARCHAR},</if>
            <if test="articleSummary != null">article_summary = #{articleSummary,jdbcType=VARCHAR},</if>
            <if test="articleThumbnail != null">article_thumbnail = #{articleThumbnail,jdbcType=VARCHAR},</if>
        </set>
        where article_id = #{articleId,jdbcType=INTEGER}
    </update>
    <update id="updateCommentCountByArticleId">
        update
        <include refid="tb"/>
        set article_comment_count = (
        select count(*) from `comment`
        where article.article_id = comment.comment_article_id
        )
        where article_id=#{articleId}
    </update>
    <select id="countArticleByStatus" resultType="integer">
        select count(*) from
        <include refid="tb"/>
        where article_status = #{status,jdbcType=INTEGER}
    </select>
    <select id="countArticleComment" resultType="integer">
        select sum(article_comment_count)
        from <include refid="tb"/>
        where article_status =1
    </select>
    <select id="countArticleView" resultType="java.lang.Integer">
        select sum(article_view_count)
        from <include refid="tb"/>
        where article_status =1
    </select>
    <select id="getArticleListByArticleUserId" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
        where article_user_id = #{articleUserId,jdbcType=INTEGER}
    </select>
    <select id="getArticleListByMap" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
        <where>
            <if test="status != null">
                article.article_status = #{status} AND
            </if>
            <if test="keywords != null">
                article.article_title LIKE concat(concat('%',#{keywords}),'%') AND
            </if>
            <if test="userId != null">
                article.article_user_id = #{userId} AND
            </if>
            <if test="categoryId != null">
                article.article_id IN (
                SELECT article_category_ref.article_id FROM article_category_ref
                WHERE article_category_ref.category_id = #{categoryId}
                ) AND
            </if>
            <if test="tagId != null">
                article.article_id IN (
                SELECT article_tag_ref.article_id FROM article_tag_ref
                WHERE article_tag_ref.tag_id = #{tagId}
                ) AND
            </if>
            1 = 1
        </where>
        ORDER BY `article`.`article_order` DESC, `article`.`article_id` DESC
    </select>
    <select id="getArticleListByAllNotWithContent" resultType="com.myall.myBlog.pojo.Article">
        select article_id, article_user_id, article_title, article_create_time, article_thumbnail
        from <include refid="tb"/>
        where article_status =1
        order by article_id desc
    </select>
    <select id="getArticleList" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
    </select>
    <select id="getArticleByStatusAndId" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
        <where>
            <if test="status!=null">article_status =#{status} and</if>
            article_id = #{id}
        </where>
    </select>
    <select id="getArticleByViewCount" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
        where article_status=1
        order by article_view_count desc,article_order desc,article_id desc
        limit #{limit}
    </select>
    <select id="getArticleByAfterId" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
        where article_id > #{id} and article_status=1
        order by article_id
        limit 1
    </select>
    <select id="getArticleByBeforeId" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
        where article_id &lt; #{id} and article_status=1
        order by article_id
        limit 1
    </select>
    <select id="getRandomArticle" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
        where  article_status=1
        order by
        RAND ()
        limit #{limit}
    </select>
    <select id="getArticleByCommentCount" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
        where article_status=1
        order by article_comment_count desc,article_order desc,article_id desc
        limit #{limit}
    </select>
    <select id="getLastUpdateArticle" resultType="com.myall.myBlog.pojo.Article">
        select * from <include refid="tb"/>
        where article_status=1
        order by article_update_time desc
        limit 1
    </select>

    <!--    &lt;!&ndash;获得最后更新的记录&ndash;&gt;
        <select id="getLastUpdateArticle" resultType="com.myall.myBlog.pojo.Article">
            SELECT * FROM <include refid="tb"/>
            WHERE
            article_status = 1 AND article_update_time=
            (
            SELECT max(article_update_time) FROM article
            )
        </select>-->
    <select id="countArticleByUserId" resultType="java.lang.Integer">
        select count(*) from <include refid="tb"/>
        where article_user_id=#{userId} and article_status=1
    </select>
    <select id="getArticleByCategoryIds" resultType="com.myall.myBlog.pojo.Article">
        select
        article.article_id, article.article_user_id, article.article_title,
        article.article_view_count, article.article_comment_count,
        article.article_like_count, article.article_create_time, article.article_update_time,
        article.article_is_comment, article.article_status, article.article_order,
        article.article_summary, article.article_thumbnail
        from <include refid="tb"/>, article_category_ref
        <where>
            article.article_status=1 and
            article.article_id=article_category_ref.article_id and
            article_category_ref.category_id
            <if test="categoryIds!=null">
                <foreach collection="categoryIds" open="(" close=")" item="categoryId">
                    #{categoryId}
                </foreach>
            </if>
        </where>
        limit #{limit}
    </select>
    <select id="getArticleByCategoryId" resultType="com.myall.myBlog.pojo.Article">
        select
        article.article_id, article.article_user_id, article.article_title,
        article.article_view_count, article.article_comment_count,
        article.article_like_count, article.article_create_time, article.article_update_time,
        article.article_is_comment, article.article_status, article.article_order,
        article.article_summary, article.article_thumbnail
        from <include refid="tb"/>, article_category_ref
        where
        article.article_status=1 and
        article.article_id=article_category_ref.article_id and
        article_category_ref.category_id=#{categoryId}
        limit #{limit}
    </select>
    <select id="getArticleByLimit" resultType="com.myall.myBlog.pojo.Article">
        select  article_id, article_user_id, article_title, article_view_count,
                article_comment_count, article_like_count,article_create_time,
                article_update_time, article_is_comment, article_status, article_order,
                article_thumbnail
         from <include refid="tb"/>
        where article_user_id=#{userId}
        order by article_id desc
        limit #{limit}
    </select>
    <select id="getArticleIdsByUserId" resultType="java.lang.Integer">
        select
        article_id
        from <include refid="tb"/>
        <if test="userId!=null">
            where
            article_user_id=#{userId}
        </if>


    </select>
</mapper>